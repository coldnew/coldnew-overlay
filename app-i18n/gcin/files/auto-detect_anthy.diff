--- gcin-1.4.4.orig/Makefile.gcin
+++ gcin-1.4.4/Makefile.gcin
@@ -72,6 +72,10 @@
 OBJS += $(gcin_tsin_o)
 endif
 
+ifeq ($(USE_ANTHY),Y)
+CFLAGS += -DUSE_ANTHY=1
+endif
+
 im-srv = im-srv/im-srv.a
 
 .c.E:
@@ -168,8 +172,12 @@
 #	$(CC) -o $@ $(OBJS_ANTHY) $(LDFLAGS)
 
 gcin1_so= intcode.pico win-int.pico win-message.pico win-sym.pico \
-win-inmd-switch.pico pinyin.pico win-pho-near.pico win-kbm.pico tsin-char.pico \
-anthy.pico
+win-inmd-switch.pico pinyin.pico win-pho-near.pico win-kbm.pico tsin-char.pico
+
+ifeq ($(USE_ANTHY),Y)
+gcin1_so += anthy.pico
+endif
+
 gcin1.so: $(gcin1_so)
 	$(CC) $(SO_FLAGS) -o $@ $(gcin1_so) $(LDFLAGS)
 
--- gcin-1.4.4.orig/configure
+++ gcin-1.4.4/configure
@@ -106,6 +106,18 @@
   echo " found."
 fi
 
+echo -n ".... Testing anthy    :  "
+
+USE_ANTHY=`pkg-config --libs anthy`
+
+if [ $? != 0 ]; then
+  USE_ANTHY=N
+  echo "It's ok if you don't want anthy support."
+else
+  USE_ANTHY=Y
+  echo "found."
+fi
+
 LIB='lib'
 if [ -d /lib64 ]; then
 LIB='lib64'
@@ -218,6 +230,7 @@
 echo "USE_TRAY=$use_tray" >> config.mak
 echo "USE_I18N=$use_i18n" >> config.mak
 echo "USE_TSIN=$use_tsin" >> config.mak
+echo "USE_ANTHY=$USE_ANTHY" >> config.mak
 
 
 cd menu
--- gcin-1.4.4.orig/eve.c
+++ gcin-1.4.4/eve.c
@@ -246,9 +246,11 @@
     case 10:
       hide_win_int();
       break;
+#if USE_ANTHY
     case 12:
       hide_win_anthy();
       break;
+#endif
     default:
       hide_win_gtab();
   }
@@ -287,9 +289,11 @@
     case 10:
       show_win_int();
       break;
+#if USE_ANTHY
     case 12:
       show_win_anthy();
       break;
+#endif
     default:
       show_win_gtab();
   }
@@ -339,9 +343,11 @@
     case 10:
       move_win_int(x, y);
       break;
+#if USE_ANTHY
     case 12:
       move_win_anthy(x, y);
       break;
+#endif
     default:
       if (!cs->in_method)
         return;
@@ -588,8 +594,10 @@
 #endif
     case 10:
       break;
+#if USE_ANTHY
     case 12:
       return anthy_visible();
+#endif
     default:
       if (!gwin_gtab)
         return FALSE;
@@ -697,6 +705,7 @@
       current_CS->in_method = in_no;
       init_inter_code();
       break;
+#if USE_ANTHY
     case 12:
       if (init_win_anthy()) {
         current_CS->in_method = in_no;
@@ -705,6 +714,7 @@
         return FALSE;
       }
       break;
+#endif
     default:
       init_gtab(in_no);
       if (!inmd[in_no].DefChars)
@@ -914,8 +924,10 @@
 #endif
     case 10:
       return feedkey_intcode(keysym);
+#if USE_ANTHY
     case 12:
       return feedkey_anthy(keysym, kev_state);
+#endif
     default:
       return feedkey_gtab(keysym, kev_state);
   }
@@ -955,8 +967,10 @@
   switch(current_CS->in_method) {
     case 6:
       return feedkey_pp_release(keysym, kev_state);
+#if USE_ANTHY
     case 12:
       return feedkey_anthy_release(keysym, kev_state);
+#endif
   }
 #endif
 
