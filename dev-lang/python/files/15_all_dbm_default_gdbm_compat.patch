--- setup.py.orig	2008-06-30 20:10:36.000000000 +0300
+++ setup.py	2008-06-30 20:13:57.000000000 +0300
@@ -899,21 +899,16 @@
 
         # The standard Unix dbm module:
         if platform not in ['cygwin']:
-            if find_file("ndbm.h", inc_dirs, []) is not None:
-                # Some systems have -lndbm, others don't
-                if self.compiler.find_library_file(lib_dirs, 'ndbm'):
-                    ndbm_libs = ['ndbm']
-                else:
-                    ndbm_libs = []
-                exts.append( Extension('_dbm', ['_dbmmodule.c'],
-                                       define_macros=[('HAVE_NDBM_H',None)],
-                                       libraries = ndbm_libs ) )
-            elif (self.compiler.find_library_file(lib_dirs, 'gdbm')
-                  and find_file("gdbm/ndbm.h", inc_dirs, []) is not None):
+            # To prevent automagic dependencies check for relevant modules in
+            # disabled_module_list.
+            if (self.compiler.find_library_file(lib_dirs, 'gdbm')
+                    and find_file("gdbm/ndbm.h", inc_dirs, []) is not None
+                    and 'gdbm' not in disabled_module_list):
                 exts.append( Extension('_dbm', ['_dbmmodule.c'],
                                        define_macros=[('HAVE_GDBM_NDBM_H',None)],
-                                       libraries = ['gdbm'] ) )
-            elif db_incs is not None:
+                                       libraries = ['gdbm', 'gdbm_compat'] ) )
+
+            elif db_incs is not None and 'bsddb' not in disabled_module_list:
                 exts.append( Extension('_dbm', ['_dbmmodule.c'],
                                        library_dirs=dblib_dir,
                                        runtime_library_dirs=dblib_dir,
@@ -921,6 +916,17 @@
                                        define_macros=[('HAVE_BERKDB_H',None),
                                                       ('DB_DBM_HSEARCH',None)],
                                        libraries=dblibs))
+            # Check for ndbm.h here after checking berkdb because ndbm.h is
+            # only provided by db-1*
+            elif find_file("ndbm.h", inc_dirs, []) is not None:
+                # Some systems have -lndbm, others don't
+                if self.compiler.find_library_file(lib_dirs, 'ndbm'):
+                    ndbm_libs = ['ndbm']
+                else:
+                    ndbm_libs = []
+                exts.append( Extension('_dbm', ['_dbmmodule.c'],
+                                       define_macros=[('HAVE_NDBM_H',None)],
+                                       libraries = ndbm_libs ) )
             else:
                 missing.append('_dbm')
 
