# 作者（author）: 孙海勇
# 发布协议（License）: GPL v2
# 邮件（email）: youbest@sina.com
# 说明：此补丁用于Linux内核，实现直接在framebuffer环境下直接显示UTF-8编码的文字功能。此补丁为fbcondecor功能修正补丁，需要实现给内核打fbcondecor补丁。

diff -Nur a/drivers/video/console/cfbcondecor.c b/drivers/video/console/cfbcondecor.c
--- a/drivers/video/console/cfbcondecor.c	2009-01-02 10:03:34.251714450 +0800
+++ b/drivers/video/console/cfbcondecor.c	2009-01-02 20:46:44.063245258 +0800
@@ -24,6 +24,21 @@
 
 #include "fbcon.h"
 #include "fbcondecor.h"
+#include "fonts_utf8.h"
+
+static int fbcon_softback_size = 32768;
+static const unsigned short *utf8_pos(struct vc_data *vc, const unsigned short *utf8)
+{
+	unsigned long p = (long)utf8;
+	if (p >= vc->vc_origin && p < vc->vc_scr_end) {
+		return (unsigned short *)(p + vc->vc_screenbuf_size);
+	} else if (vc->vc_num == fg_console){
+		return (unsigned short *)(p + fbcon_softback_size);
+	} else {
+   		printk("Warnning, changing not active console.\n");
+		return utf8;
+	}
+}
 
 #define parse_pixel(shift,bpp,type)						\
 	do {									\
@@ -172,7 +187,11 @@
 {
 	unsigned short charmask = vc->vc_hi_font_mask ? 0x1ff : 0xff;
 	struct fbcon_ops *ops = info->fbcon_par;
+	const void *olddata = vc->vc_font.data;
+	int oldwidth = vc->vc_font.width;
+	int oldheight = vc->vc_font.height;
 	int fg_color, bg_color, transparent;
+	int utf_8 = 0;
 	u8 *src;
 	u32 bgx, fgx;
 	u16 c = scr_readw(s);
@@ -191,13 +210,36 @@
 	bgx = cc2cx(bg_color);
 
 	while (count--) {
-		c = scr_readw(s++);
-		src = vc->vc_font.data + (c & charmask) * vc->vc_font.height *
-		      ((vc->vc_font.width + 7) >> 3);
+		utf_8 = 0;
+		c = scr_readw(s);
+		if ((c & charmask) == 0xff && scr_readw(utf8_pos(vc,s)) != 0){
+			vc->vc_font.data = font_utf8;
+			vc->vc_font.width = 8;
+			vc->vc_font.height = 16;
+			src = vc->vc_font.data + (scr_readw(utf8_pos(vc,s)) * 32);
+			utf_8 = 1;
+		}else{
+			if ((c & charmask) == 0xfe && scr_readw((u16 *)utf8_pos(vc,s)) != 0){
+				vc->vc_font.data = font_utf8;
+				vc->vc_font.width = 8;
+				vc->vc_font.height = 16;
+				src = vc->vc_font.data + (scr_readw(utf8_pos(vc,s)) * 32 + 16);
+				utf_8 = 1;
+			}else{	
+				src = vc->vc_font.data + (c & charmask) * vc->vc_font.height *
+		      		((vc->vc_font.width + 7) >> 3);
+			}
+		}
 
 		fbcon_decor_renderc(info, yy, xx, vc->vc_font.height,
 			       vc->vc_font.width, src, fgx, bgx, transparent);
 		xx += vc->vc_font.width;
+		if (utf_8 == 1){
+			vc->vc_font.data = (void *)olddata;
+			vc->vc_font.width = oldwidth;
+			vc->vc_font.height = oldheight;
+		}
+		s++;
 	}
 }
 
