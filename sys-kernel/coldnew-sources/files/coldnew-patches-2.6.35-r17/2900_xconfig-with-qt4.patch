--- a/scripts/kconfig/Makefile	2010-05-20 16:09:21.000000000 -0400
+++ b/scripts/kconfig/Makefile	2010-05-20 16:01:19.000000000 -0400
@@ -223,6 +223,7 @@ $(obj)/.tmp_qtcheck:
 	@set -e; echo "  CHECK   qt"; dir=""; pkg=""; \
 	pkg-config --exists qt 2> /dev/null && pkg=qt; \
 	pkg-config --exists qt-mt 2> /dev/null && pkg=qt-mt; \
+	pkg-config --exists Qt3Support 2> /dev/null && pkg=Qt3Support; \
 	if [ -n "$$pkg" ]; then \
 	  cflags="\$$(shell pkg-config $$pkg --cflags)"; \
 	  libs="\$$(shell pkg-config $$pkg --libs)"; \
--- a/scripts/kconfig/expr.h	2010-05-20 16:09:26.000000000 -0400
+++ b/scripts/kconfig/expr.h	2010-05-20 16:01:24.000000000 -0400
@@ -171,6 +171,8 @@ struct menu {
 	void *data;
 };
 
+typedef struct menu KCMenu; /* HACK: to avoid qt4 moc getting confused by structs - JS */
+
 #define MENU_CHANGED		0x0001
 #define MENU_ROOT		0x0002
 
--- a/scripts/kconfig/qconf.h	2010-05-20 16:09:30.000000000 -0400
+++ b/scripts/kconfig/qconf.h	2010-05-20 16:01:50.000000000 -0400
@@ -3,9 +3,18 @@
  * Released under the terms of the GNU GPL v2.0.
  */
 
-#include <qlistview.h>
+#include <q3listview.h>
 #if QT_VERSION >= 300
 #include <qsettings.h>
+//Added by qt3to4:
+#include <QContextMenuEvent>
+#include <QCloseEvent>
+#include <QFocusEvent>
+#include <Q3ValueList>
+#include <QPixmap>
+#include <QMouseEvent>
+#include <Q3PopupMenu>
+#include <QKeyEvent>
 #else
 class QSettings {
 public:
@@ -34,8 +43,8 @@ class ConfigMainWindow;
 
 class ConfigSettings : public QSettings {
 public:
-	QValueList<int> readSizes(const QString& key, bool *ok);
-	bool writeSizes(const QString& key, const QValueList<int>& value);
+	Q3ValueList<int> readSizes(const QString& key, bool *ok);
+	bool writeSizes(const QString& key, const Q3ValueList<int>& value);
 };
 
 enum colIdx {
@@ -45,9 +54,9 @@ enum listMode {
 	singleMode, menuMode, symbolMode, fullMode, listMode
 };
 
-class ConfigList : public QListView {
+class ConfigList : public Q3ListView {
 	Q_OBJECT
-	typedef class QListView Parent;
+	typedef class Q3ListView Parent;
 public:
 	ConfigList(ConfigView* p, const char *name = 0);
 	void reinit(void);
@@ -55,7 +64,7 @@ public:
 	{
 		return (ConfigView*)Parent::parent();
 	}
-	ConfigItem* findConfigItem(struct menu *);
+	ConfigItem* findConfigItem(KCMenu *);
 
 protected:
 	void keyPressEvent(QKeyEvent *e);
@@ -67,7 +76,7 @@ protected:
 	void contextMenuEvent(QContextMenuEvent *e);
 
 public slots:
-	void setRootMenu(struct menu *menu);
+	void setRootMenu(KCMenu *menu);
 
 	void updateList(ConfigItem *item);
 	void setValue(ConfigItem* item, tristate val);
@@ -75,10 +84,10 @@ public slots:
 	void updateSelection(void);
 	void saveSettings(void);
 signals:
-	void menuChanged(struct menu *menu);
-	void menuSelected(struct menu *menu);
+	void menuChanged(KCMenu *menu);
+	void menuSelected(KCMenu *menu);
 	void parentSelected(void);
-	void gotFocus(struct menu *);
+	void gotFocus(KCMenu *);
 
 public:
 	void updateListAll(void)
@@ -116,7 +125,7 @@ public:
 	void setParentMenu(void);
 
 	template <class P>
-	void updateMenuList(P*, struct menu*);
+	void updateMenuList(P*, KCMenu*);
 
 	bool updateAll;
 
@@ -126,30 +135,30 @@ public:
 
 	bool showAll, showName, showRange, showData;
 	enum listMode mode;
-	struct menu *rootEntry;
+	KCMenu *rootEntry;
 	QColorGroup disabledColorGroup;
 	QColorGroup inactivedColorGroup;
-	QPopupMenu* headerPopup;
+	Q3PopupMenu* headerPopup;
 
 private:
 	int colMap[colNr];
 	int colRevMap[colNr];
 };
 
-class ConfigItem : public QListViewItem {
-	typedef class QListViewItem Parent;
+class ConfigItem : public Q3ListViewItem {
+	typedef class Q3ListViewItem Parent;
 public:
-	ConfigItem(QListView *parent, ConfigItem *after, struct menu *m, bool v)
+	ConfigItem(Q3ListView *parent, ConfigItem *after, KCMenu *m, bool v)
 	: Parent(parent, after), menu(m), visible(v), goParent(false)
 	{
 		init();
 	}
-	ConfigItem(ConfigItem *parent, ConfigItem *after, struct menu *m, bool v)
+	ConfigItem(ConfigItem *parent, ConfigItem *after, KCMenu *m, bool v)
 	: Parent(parent, after), menu(m), visible(v), goParent(false)
 	{
 		init();
 	}
-	ConfigItem(QListView *parent, ConfigItem *after, bool v)
+	ConfigItem(Q3ListView *parent, ConfigItem *after, bool v)
 	: Parent(parent, after), menu(0), visible(v), goParent(true)
 	{
 		init();
@@ -192,7 +201,7 @@ public:
 	void paintCell(QPainter* p, const QColorGroup& cg, int column, int width, int align);
 
 	ConfigItem* nextItem;
-	struct menu *menu;
+	KCMenu *menu;
 	bool visible;
 	bool goParent;
 };
@@ -213,9 +222,9 @@ public:
 	ConfigItem *item;
 };
 
-class ConfigView : public QVBox {
+class ConfigView : public Q3VBox {
 	Q_OBJECT
-	typedef class QVBox Parent;
+	typedef class Q3VBox Parent;
 public:
 	ConfigView(QWidget* parent, const char *name = 0);
 	~ConfigView(void);
@@ -244,22 +253,22 @@ public:
 	ConfigView* nextView;
 };
 
-class ConfigInfoView : public QTextBrowser {
+class ConfigInfoView : public Q3TextBrowser {
 	Q_OBJECT
-	typedef class QTextBrowser Parent;
+	typedef class Q3TextBrowser Parent;
 public:
 	ConfigInfoView(QWidget* parent, const char *name = 0);
 	bool showDebug(void) const { return _showDebug; }
 
 public slots:
-	void setInfo(struct menu *menu);
+	void setInfo(KCMenu *menu);
 	void saveSettings(void);
 	void setSource(const QString& name);
 	void setShowDebug(bool);
 
 signals:
 	void showDebugChanged(bool);
-	void menuSelected(struct menu *);
+	void menuSelected(KCMenu *);
 
 protected:
 	void symbolInfo(void);
@@ -267,11 +276,11 @@ protected:
 	QString debug_info(struct symbol *sym);
 	static QString print_filter(const QString &str);
 	static void expr_print_help(void *data, struct symbol *sym, const char *str);
-	QPopupMenu* createPopupMenu(const QPoint& pos);
+	Q3PopupMenu* createPopupMenu(const QPoint& pos);
 	void contentsContextMenuEvent(QContextMenuEvent *e);
 
 	struct symbol *sym;
-	struct menu *menu;
+	KCMenu *menu;
 	bool _showDebug;
 };
 
@@ -295,7 +304,7 @@ protected:
 	struct symbol **result;
 };
 
-class ConfigMainWindow : public QMainWindow {
+class ConfigMainWindow : public Q3MainWindow {
 	Q_OBJECT
 
 	static QAction *saveAction;
@@ -303,8 +312,8 @@ class ConfigMainWindow : public QMainWin
 public:
 	ConfigMainWindow(void);
 public slots:
-	void changeMenu(struct menu *);
-	void setMenuLink(struct menu *);
+	void changeMenu(KCMenu *);
+	void setMenuLink(KCMenu *);
 	void listFocusChanged(void);
 	void goBack(void);
 	void loadConfig(void);
@@ -327,7 +336,7 @@ protected:
 	ConfigView *configView;
 	ConfigList *configList;
 	ConfigInfoView *helpText;
-	QToolBar *toolBar;
+	Q3ToolBar *toolBar;
 	QAction *backAction;
 	QSplitter* split1;
 	QSplitter* split2;
--- a/scripts/kconfig/qconf.cc	2010-05-20 16:09:34.000000000 -0400
+++ b/scripts/kconfig/qconf.cc	2010-05-20 16:01:46.000000000 -0400
@@ -4,24 +4,35 @@
  */
 
 #include <qapplication.h>
-#include <qmainwindow.h>
+#include <q3mainwindow.h>
 #include <qdesktopwidget.h>
-#include <qtoolbar.h>
+#include <q3toolbar.h>
 #include <qlayout.h>
-#include <qvbox.h>
+#include <q3vbox.h>
 #include <qsplitter.h>
-#include <qlistview.h>
-#include <qtextbrowser.h>
+#include <q3listview.h>
+#include <q3textbrowser.h>
 #include <qlineedit.h>
 #include <qlabel.h>
 #include <qpushbutton.h>
 #include <qmenubar.h>
 #include <qmessagebox.h>
 #include <qaction.h>
-#include <qheader.h>
-#include <qfiledialog.h>
-#include <qdragobject.h>
+#include <q3header.h>
+#include <q3filedialog.h>
+#include <q3dragobject.h>
 #include <qregexp.h>
+//Added by qt3to4:
+#include <QContextMenuEvent>
+#include <QPixmap>
+#include <QFocusEvent>
+#include <QMouseEvent>
+#include <QCloseEvent>
+#include <Q3ValueList>
+#include <QKeyEvent>
+#include <Q3HBoxLayout>
+#include <Q3VBoxLayout>
+#include <Q3PopupMenu>
 
 #include <stdlib.h>
 
@@ -54,9 +65,9 @@ static inline QString qgettext(const QSt
 /**
  * Reads a list of integer values from the application settings.
  */
-QValueList<int> ConfigSettings::readSizes(const QString& key, bool *ok)
+Q3ValueList<int> ConfigSettings::readSizes(const QString& key, bool *ok)
 {
-	QValueList<int> result;
+	Q3ValueList<int> result;
 	QStringList entryList = readListEntry(key, ok);
 	if (ok) {
 		QStringList::Iterator it;
@@ -70,10 +81,10 @@ QValueList<int> ConfigSettings::readSize
 /**
  * Writes a list of integer values to the application settings.
  */
-bool ConfigSettings::writeSizes(const QString& key, const QValueList<int>& value)
+bool ConfigSettings::writeSizes(const QString& key, const Q3ValueList<int>& value)
 {
 	QStringList stringList;
-	QValueList<int>::ConstIterator it;
+	Q3ValueList<int>::ConstIterator it;
 
 	for (it = value.begin(); it != value.end(); ++it)
 		stringList.push_back(QString::number(*it));
@@ -385,7 +396,7 @@ void ConfigList::saveSettings(void)
 	}
 }
 
-ConfigItem* ConfigList::findConfigItem(struct menu *menu)
+ConfigItem* ConfigList::findConfigItem(KCMenu *menu)
 {
 	ConfigItem* item = (ConfigItem*)menu->data;
 
@@ -399,7 +410,7 @@ ConfigItem* ConfigList::findConfigItem(s
 
 void ConfigList::updateSelection(void)
 {
-	struct menu *menu;
+	KCMenu *menu;
 	enum prop_type type;
 
 	ConfigItem* item = (ConfigItem*)selectedItem();
@@ -422,7 +433,7 @@ void ConfigList::updateList(ConfigItem* 
 	if (!rootEntry) {
 		if (mode != listMode)
 			goto update;
-		QListViewItemIterator it(this);
+		Q3ListViewItemIterator it(this);
 		ConfigItem* item;
 
 		for (; it.current(); ++it) {
@@ -486,7 +497,7 @@ void ConfigList::setValue(ConfigItem* it
 void ConfigList::changeValue(ConfigItem* item)
 {
 	struct symbol* sym;
-	struct menu* menu;
+	KCMenu* menu;
 	int type, oldexpr, newexpr;
 
 	menu = item->menu;
@@ -527,7 +538,7 @@ void ConfigList::changeValue(ConfigItem*
 	}
 }
 
-void ConfigList::setRootMenu(struct menu *menu)
+void ConfigList::setRootMenu(KCMenu *menu)
 {
 	enum prop_type type;
 
@@ -546,14 +557,14 @@ void ConfigList::setRootMenu(struct menu
 void ConfigList::setParentMenu(void)
 {
 	ConfigItem* item;
-	struct menu *oldroot;
+	KCMenu *oldroot;
 
 	oldroot = rootEntry;
 	if (rootEntry == &rootmenu)
 		return;
 	setRootMenu(menu_get_parent_menu(rootEntry->parent));
 
-	QListViewItemIterator it(this);
+	Q3ListViewItemIterator it(this);
 	for (; (item = (ConfigItem*)it.current()); it++) {
 		if (item->menu == oldroot) {
 			setCurrentItem(item);
@@ -571,9 +582,9 @@ void ConfigList::setParentMenu(void)
  * menu: entry to be updated
  */
 template <class P>
-void ConfigList::updateMenuList(P* parent, struct menu* menu)
+void ConfigList::updateMenuList(P* parent, KCMenu* menu)
 {
-	struct menu* child;
+	KCMenu* child;
 	ConfigItem* item;
 	ConfigItem* last;
 	bool visible;
@@ -635,9 +646,9 @@ void ConfigList::updateMenuList(P* paren
 
 void ConfigList::keyPressEvent(QKeyEvent* ev)
 {
-	QListViewItem* i = currentItem();
+	Q3ListViewItem* i = currentItem();
 	ConfigItem* item;
-	struct menu *menu;
+	KCMenu *menu;
 	enum prop_type type;
 
 	if (ev->key() == Qt::Key_Escape && mode != fullMode && mode != listMode) {
@@ -698,7 +709,7 @@ void ConfigList::contentsMouseReleaseEve
 {
 	QPoint p(contentsToViewport(e->pos()));
 	ConfigItem* item = (ConfigItem*)itemAt(p);
-	struct menu *menu;
+	KCMenu *menu;
 	enum prop_type ptype;
 	const QPixmap* pm;
 	int idx, x;
@@ -760,7 +771,7 @@ void ConfigList::contentsMouseDoubleClic
 {
 	QPoint p(contentsToViewport(e->pos()));
 	ConfigItem* item = (ConfigItem*)itemAt(p);
-	struct menu *menu;
+	KCMenu *menu;
 	enum prop_type ptype;
 
 	if (!item)
@@ -785,7 +796,7 @@ skip:
 
 void ConfigList::focusInEvent(QFocusEvent *e)
 {
-	struct menu *menu = NULL;
+	KCMenu *menu = NULL;
 
 	Parent::focusInEvent(e);
 
@@ -803,8 +814,8 @@ void ConfigList::contextMenuEvent(QConte
 		if (!headerPopup) {
 			QAction *action;
 
-			headerPopup = new QPopupMenu(this);
-			action = new QAction(NULL, _("Show Name"), 0, this);
+			headerPopup = new Q3PopupMenu(this);
+			action = new QAction(_("Show Name"), this);
 			  action->setToggleAction(TRUE);
 			  connect(action, SIGNAL(toggled(bool)),
 				  parent(), SLOT(setShowName(bool)));
@@ -812,7 +823,7 @@ void ConfigList::contextMenuEvent(QConte
 				  action, SLOT(setOn(bool)));
 			  action->setOn(showName);
 			  action->addTo(headerPopup);
-			action = new QAction(NULL, _("Show Range"), 0, this);
+			action = new QAction(_("Show Range"), this);
 			  action->setToggleAction(TRUE);
 			  connect(action, SIGNAL(toggled(bool)),
 				  parent(), SLOT(setShowRange(bool)));
@@ -820,7 +831,7 @@ void ConfigList::contextMenuEvent(QConte
 				  action, SLOT(setOn(bool)));
 			  action->setOn(showRange);
 			  action->addTo(headerPopup);
-			action = new QAction(NULL, _("Show Data"), 0, this);
+			action = new QAction(_("Show Data"), this);
 			  action->setToggleAction(TRUE);
 			  connect(action, SIGNAL(toggled(bool)),
 				  parent(), SLOT(setShowData(bool)));
@@ -898,7 +909,7 @@ void ConfigView::setShowData(bool b)
 
 void ConfigList::setAllOpen(bool open)
 {
-	QListViewItemIterator it(this);
+	Q3ListViewItemIterator it(this);
 
 	for (; it.current(); it++)
 		it.current()->setOpen(open);
@@ -952,7 +963,7 @@ void ConfigInfoView::setShowDebug(bool b
 	}
 }
 
-void ConfigInfoView::setInfo(struct menu *m)
+void ConfigInfoView::setInfo(KCMenu *m)
 {
 	if (menu == m)
 		return;
@@ -973,7 +984,7 @@ void ConfigInfoView::setSource(const QSt
 
 	switch (p[0]) {
 	case 'm':
-		struct menu *m;
+		KCMenu *m;
 
 		if (sscanf(p, "m%p", &m) == 1 && menu != m) {
 			menu = m;
@@ -1162,10 +1173,10 @@ void ConfigInfoView::expr_print_help(voi
 		*text += str2;
 }
 
-QPopupMenu* ConfigInfoView::createPopupMenu(const QPoint& pos)
+Q3PopupMenu* ConfigInfoView::createPopupMenu(const QPoint& pos)
 {
-	QPopupMenu* popup = Parent::createPopupMenu(pos);
-	QAction* action = new QAction(NULL, _("Show Debug Info"), 0, popup);
+	Q3PopupMenu* popup = Parent::createPopupMenu(pos);
+	QAction* action = new QAction(_("Show Debug Info"), popup);
 	  action->setToggleAction(TRUE);
 	  connect(action, SIGNAL(toggled(bool)), SLOT(setShowDebug(bool)));
 	  connect(this, SIGNAL(showDebugChanged(bool)), action, SLOT(setOn(bool)));
@@ -1185,8 +1196,8 @@ ConfigSearchWindow::ConfigSearchWindow(C
 {
 	setCaption("Search Config");
 
-	QVBoxLayout* layout1 = new QVBoxLayout(this, 11, 6);
-	QHBoxLayout* layout2 = new QHBoxLayout(0, 0, 6);
+	Q3VBoxLayout* layout1 = new Q3VBoxLayout(this, 11, 6);
+	Q3HBoxLayout* layout2 = new Q3HBoxLayout(0, 0, 6);
 	layout2->addWidget(new QLabel(_("Find:"), this));
 	editField = new QLineEdit(this);
 	connect(editField, SIGNAL(returnPressed()), SLOT(search()));
@@ -1202,10 +1213,10 @@ ConfigSearchWindow::ConfigSearchWindow(C
 	list = new ConfigView(split, name);
 	list->list->mode = listMode;
 	info = new ConfigInfoView(split, name);
-	connect(list->list, SIGNAL(menuChanged(struct menu *)),
-		info, SLOT(setInfo(struct menu *)));
-	connect(list->list, SIGNAL(menuChanged(struct menu *)),
-		parent, SLOT(setMenuLink(struct menu *)));
+	connect(list->list, SIGNAL(menuChanged(KCMenu *)),
+		info, SLOT(setInfo(KCMenu *)));
+	connect(list->list, SIGNAL(menuChanged(KCMenu *)),
+		parent, SLOT(setMenuLink(KCMenu *)));
 
 	layout1->addWidget(split);
 
@@ -1222,7 +1233,7 @@ ConfigSearchWindow::ConfigSearchWindow(C
 			y = configSettings->readNumEntry("/window y", 0, &ok);
 		if (ok)
 			move(x, y);
-		QValueList<int> sizes = configSettings->readSizes("/split", &ok);
+		Q3ValueList<int> sizes = configSettings->readSizes("/split", &ok);
 		if (ok)
 			split->setSizes(sizes);
 		configSettings->endGroup();
@@ -1309,60 +1320,60 @@ ConfigMainWindow::ConfigMainWindow(void)
 	configList->setFocus();
 
 	menu = menuBar();
-	toolBar = new QToolBar("Tools", this);
+	toolBar = new Q3ToolBar("Tools", this);
 
-	backAction = new QAction("Back", QPixmap(xpm_back), _("Back"), 0, this);
+	backAction = new QAction(QPixmap(xpm_back), _("Back"), this);
 	  connect(backAction, SIGNAL(activated()), SLOT(goBack()));
 	  backAction->setEnabled(FALSE);
-	QAction *quitAction = new QAction("Quit", _("&Quit"), Qt::CTRL + Qt::Key_Q, this);
+	QAction *quitAction = new QAction(_("&Quit"), Qt::CTRL + Qt::Key_Q, this, 0);
 	  connect(quitAction, SIGNAL(activated()), SLOT(close()));
-	QAction *loadAction = new QAction("Load", QPixmap(xpm_load), _("&Load"), Qt::CTRL + Qt::Key_L, this);
+	QAction *loadAction = new QAction(QPixmap(xpm_load), _("&Load"), Qt::CTRL + Qt::Key_L, this, 0);
 	  connect(loadAction, SIGNAL(activated()), SLOT(loadConfig()));
-	saveAction = new QAction("Save", QPixmap(xpm_save), _("&Save"), Qt::CTRL + Qt::Key_S, this);
+	saveAction = new QAction(QPixmap(xpm_save), _("&Save"), Qt::CTRL + Qt::Key_S, this, 0);
 	  connect(saveAction, SIGNAL(activated()), SLOT(saveConfig()));
 	conf_set_changed_callback(conf_changed);
 	// Set saveAction's initial state
 	conf_changed();
-	QAction *saveAsAction = new QAction("Save As...", _("Save &As..."), 0, this);
+	QAction *saveAsAction = new QAction(_("Save &As..."), 0, this, "Save As...");
 	  connect(saveAsAction, SIGNAL(activated()), SLOT(saveConfigAs()));
-	QAction *searchAction = new QAction("Find", _("&Find"), Qt::CTRL + Qt::Key_F, this);
+	QAction *searchAction = new QAction(_("&Find"), Qt::CTRL + Qt::Key_F, this, "Find");
 	  connect(searchAction, SIGNAL(activated()), SLOT(searchConfig()));
-	QAction *singleViewAction = new QAction("Single View", QPixmap(xpm_single_view), _("Single View"), 0, this);
+	QAction *singleViewAction = new QAction(QPixmap(xpm_single_view), _("Single View"), 0, this, "Single View");
 	  connect(singleViewAction, SIGNAL(activated()), SLOT(showSingleView()));
-	QAction *splitViewAction = new QAction("Split View", QPixmap(xpm_split_view), _("Split View"), 0, this);
+	QAction *splitViewAction = new QAction(QPixmap(xpm_split_view), _("Split View"), 0, this, "Split View");
 	  connect(splitViewAction, SIGNAL(activated()), SLOT(showSplitView()));
-	QAction *fullViewAction = new QAction("Full View", QPixmap(xpm_tree_view), _("Full View"), 0, this);
+	QAction *fullViewAction = new QAction(QPixmap(xpm_tree_view), _("Full View"), 0, this, "Full View");
 	  connect(fullViewAction, SIGNAL(activated()), SLOT(showFullView()));
 
-	QAction *showNameAction = new QAction(NULL, _("Show Name"), 0, this);
+	QAction *showNameAction = new QAction(_("Show Name"), 0, this, 0);
 	  showNameAction->setToggleAction(TRUE);
 	  connect(showNameAction, SIGNAL(toggled(bool)), configView, SLOT(setShowName(bool)));
 	  connect(configView, SIGNAL(showNameChanged(bool)), showNameAction, SLOT(setOn(bool)));
 	  showNameAction->setOn(configView->showName());
-	QAction *showRangeAction = new QAction(NULL, _("Show Range"), 0, this);
+	QAction *showRangeAction = new QAction(_("Show Range"), 0, this, 0);
 	  showRangeAction->setToggleAction(TRUE);
 	  connect(showRangeAction, SIGNAL(toggled(bool)), configView, SLOT(setShowRange(bool)));
 	  connect(configView, SIGNAL(showRangeChanged(bool)), showRangeAction, SLOT(setOn(bool)));
 	  showRangeAction->setOn(configList->showRange);
-	QAction *showDataAction = new QAction(NULL, _("Show Data"), 0, this);
+	QAction *showDataAction = new QAction(_("Show Data"), 0, this, 0);
 	  showDataAction->setToggleAction(TRUE);
 	  connect(showDataAction, SIGNAL(toggled(bool)), configView, SLOT(setShowData(bool)));
 	  connect(configView, SIGNAL(showDataChanged(bool)), showDataAction, SLOT(setOn(bool)));
 	  showDataAction->setOn(configList->showData);
-	QAction *showAllAction = new QAction(NULL, _("Show All Options"), 0, this);
+	QAction *showAllAction = new QAction(_("Show All Options"), 0, this, 0);
 	  showAllAction->setToggleAction(TRUE);
 	  connect(showAllAction, SIGNAL(toggled(bool)), configView, SLOT(setShowAll(bool)));
 	  connect(showAllAction, SIGNAL(toggled(bool)), menuView, SLOT(setShowAll(bool)));
 	  showAllAction->setOn(configList->showAll);
-	QAction *showDebugAction = new QAction(NULL, _("Show Debug Info"), 0, this);
+	QAction *showDebugAction = new QAction(_("Show Debug Info"), 0, this, 0);
 	  showDebugAction->setToggleAction(TRUE);
 	  connect(showDebugAction, SIGNAL(toggled(bool)), helpText, SLOT(setShowDebug(bool)));
 	  connect(helpText, SIGNAL(showDebugChanged(bool)), showDebugAction, SLOT(setOn(bool)));
 	  showDebugAction->setOn(helpText->showDebug());
 
-	QAction *showIntroAction = new QAction(NULL, _("Introduction"), 0, this);
+	QAction *showIntroAction = new QAction(_("Introduction"), 0, this, 0);
 	  connect(showIntroAction, SIGNAL(activated()), SLOT(showIntro()));
-	QAction *showAboutAction = new QAction(NULL, _("About"), 0, this);
+	QAction *showAboutAction = new QAction(_("About"), 0, this, 0);
 	  connect(showAboutAction, SIGNAL(activated()), SLOT(showAbout()));
 
 	// init tool bar
@@ -1376,7 +1387,7 @@ ConfigMainWindow::ConfigMainWindow(void)
 	fullViewAction->addTo(toolBar);
 
 	// create config menu
-	QPopupMenu* config = new QPopupMenu(this);
+	Q3PopupMenu* config = new Q3PopupMenu(this);
 	menu->insertItem(_("&File"), config);
 	loadAction->addTo(config);
 	saveAction->addTo(config);
@@ -1385,12 +1396,12 @@ ConfigMainWindow::ConfigMainWindow(void)
 	quitAction->addTo(config);
 
 	// create edit menu
-	QPopupMenu* editMenu = new QPopupMenu(this);
+	Q3PopupMenu* editMenu = new Q3PopupMenu(this);
 	menu->insertItem(_("&Edit"), editMenu);
 	searchAction->addTo(editMenu);
 
 	// create options menu
-	QPopupMenu* optionMenu = new QPopupMenu(this);
+	Q3PopupMenu* optionMenu = new Q3PopupMenu(this);
 	menu->insertItem(_("&Option"), optionMenu);
 	showNameAction->addTo(optionMenu);
 	showRangeAction->addTo(optionMenu);
@@ -1400,31 +1411,31 @@ ConfigMainWindow::ConfigMainWindow(void)
 	showDebugAction->addTo(optionMenu);
 
 	// create help menu
-	QPopupMenu* helpMenu = new QPopupMenu(this);
+	Q3PopupMenu* helpMenu = new Q3PopupMenu(this);
 	menu->insertSeparator();
 	menu->insertItem(_("&Help"), helpMenu);
 	showIntroAction->addTo(helpMenu);
 	showAboutAction->addTo(helpMenu);
 
-	connect(configList, SIGNAL(menuChanged(struct menu *)),
-		helpText, SLOT(setInfo(struct menu *)));
-	connect(configList, SIGNAL(menuSelected(struct menu *)),
-		SLOT(changeMenu(struct menu *)));
+	connect(configList, SIGNAL(menuChanged(KCMenu *)),
+		helpText, SLOT(setInfo(KCMenu *)));
+	connect(configList, SIGNAL(menuSelected(KCMenu *)),
+		SLOT(changeMenu(KCMenu *)));
 	connect(configList, SIGNAL(parentSelected()),
 		SLOT(goBack()));
-	connect(menuList, SIGNAL(menuChanged(struct menu *)),
-		helpText, SLOT(setInfo(struct menu *)));
-	connect(menuList, SIGNAL(menuSelected(struct menu *)),
-		SLOT(changeMenu(struct menu *)));
-
-	connect(configList, SIGNAL(gotFocus(struct menu *)),
-		helpText, SLOT(setInfo(struct menu *)));
-	connect(menuList, SIGNAL(gotFocus(struct menu *)),
-		helpText, SLOT(setInfo(struct menu *)));
-	connect(menuList, SIGNAL(gotFocus(struct menu *)),
+	connect(menuList, SIGNAL(menuChanged(KCMenu *)),
+		helpText, SLOT(setInfo(KCMenu *)));
+	connect(menuList, SIGNAL(menuSelected(KCMenu *)),
+		SLOT(changeMenu(KCMenu *)));
+
+	connect(configList, SIGNAL(gotFocus(KCMenu *)),
+		helpText, SLOT(setInfo(KCMenu *)));
+	connect(menuList, SIGNAL(gotFocus(KCMenu *)),
+		helpText, SLOT(setInfo(KCMenu *)));
+	connect(menuList, SIGNAL(gotFocus(KCMenu *)),
 		SLOT(listFocusChanged(void)));
-	connect(helpText, SIGNAL(menuSelected(struct menu *)),
-		SLOT(setMenuLink(struct menu *)));
+	connect(helpText, SIGNAL(menuSelected(KCMenu *)),
+		SLOT(setMenuLink(KCMenu *)));
 
 	QString listMode = configSettings->readEntry("/listMode", "symbol");
 	if (listMode == "single")
@@ -1435,7 +1446,7 @@ ConfigMainWindow::ConfigMainWindow(void)
 		showSplitView();
 
 	// UI setup done, restore splitter positions
-	QValueList<int> sizes = configSettings->readSizes("/split1", &ok);
+	Q3ValueList<int> sizes = configSettings->readSizes("/split1", &ok);
 	if (ok)
 		split1->setSizes(sizes);
 
@@ -1446,7 +1457,7 @@ ConfigMainWindow::ConfigMainWindow(void)
 
 void ConfigMainWindow::loadConfig(void)
 {
-	QString s = QFileDialog::getOpenFileName(conf_get_configname(), NULL, this);
+	QString s = Q3FileDialog::getOpenFileName(conf_get_configname(), NULL, this);
 	if (s.isNull())
 		return;
 	if (conf_read(QFile::encodeName(s)))
@@ -1462,7 +1473,7 @@ void ConfigMainWindow::saveConfig(void)
 
 void ConfigMainWindow::saveConfigAs(void)
 {
-	QString s = QFileDialog::getSaveFileName(conf_get_configname(), NULL, this);
+	QString s = Q3FileDialog::getSaveFileName(conf_get_configname(), NULL, this);
 	if (s.isNull())
 		return;
 	if (conf_write(QFile::encodeName(s)))
@@ -1476,7 +1487,7 @@ void ConfigMainWindow::searchConfig(void
 	searchWindow->show();
 }
 
-void ConfigMainWindow::changeMenu(struct menu *menu)
+void ConfigMainWindow::changeMenu(KCMenu *menu)
 {
 	configList->setRootMenu(menu);
 	if (configList->rootEntry->parent == &rootmenu)
@@ -1485,9 +1496,9 @@ void ConfigMainWindow::changeMenu(struct
 		backAction->setEnabled(TRUE);
 }
 
-void ConfigMainWindow::setMenuLink(struct menu *menu)
+void ConfigMainWindow::setMenuLink(KCMenu *menu)
 {
-	struct menu *parent;
+	KCMenu *parent;
 	ConfigList* list = NULL;
 	ConfigItem* item;
 
@@ -1690,9 +1701,9 @@ void ConfigMainWindow::conf_changed(void
 		saveAction->setEnabled(conf_get_changed());
 }
 
-void fixup_rootmenu(struct menu *menu)
+void fixup_rootmenu(KCMenu *menu)
 {
-	struct menu *child;
+	KCMenu *child;
 	static int menu_cnt = 0;
 
 	menu->flags |= MENU_ROOT;
